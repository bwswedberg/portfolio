{"version":3,"file":"static/webpack/static/development/pages/index.js.655fcc793ed451f1f8d7.hot-update.js","sources":["webpack:///./src/sections/ProjectsSection/Project.tsx"],"sourcesContent":["import React, { useState, createRef } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { makeStyles, Theme, createStyles, Typography, Button } from '@material-ui/core';\nimport classnames from 'classnames';\n\nimport ProjectLightbox from './ProjectLightbox';\nimport { Project } from './projects';\n\ninterface Props {\n  project: Project;\n  i: number;\n}\n\n// https://medium.com/the-non-traditional-developer/how-to-use-an-intersectionobserver-in-a-react-hook-9fb061ac6cb5\n\nexport default ({ project, i }: Props) => {\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n  const classes = useStyles();\n  const setRootRef = (element) => {\n    console.log(element);\n  };\n\n  return (\n    <div className={classes.root} ref={setRootRef}>\n      <div className={classnames('row', i % 2 && 'flex-row-reverse')}>\n        <div className=\"col-12 col-xl-6\">\n          <div className={classes.thumbnailContainer}>\n            <img\n              className={classes.thumbnail} \n              src={project.thumbnail.src}\n              onClick={() => setIsLightboxOpen(true)}\n            />\n          </div>\n        </div>\n        <div className=\"col-12 col-xl-6 align-self-center\">\n          <div className={classes.content}>\n            <Typography \n              className={classes.title} \n              color=\"textSecondary\" \n              variant=\"overline\"\n              display=\"block\"\n            >{project.type}</Typography>\n            <Typography \n              className={classes.lead} \n              color=\"textPrimary\" \n              variant=\"h6\"\n            >{project.title}</Typography>\n            <Typography \n              className={classes.paragraph} \n              variant=\"body2\"\n            >{project.description} Built with {project.tech}.</Typography>\n            <Button \n              variant=\"outlined\" \n              color=\"secondary\"\n              onClick={() => setIsLightboxOpen(true)}\n            >MORE</Button>\n          </div>\n        </div>\n      </div>\n      { isLightboxOpen && (\n        <ProjectLightbox \n          project={project} \n          onCloseRequest={() => setIsLightboxOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n  },\n  thumbnailContainer: {\n    position: 'relative',\n    maxWidth: 500,\n    width: '100%',\n    maxHeight: 260,\n    height: 260,\n  },\n  thumbnail: {\n    backgroundColor: theme.palette.background.paper,\n    maxWidth: 500,\n    width: '100%',\n    maxHeight: 260,\n    height: 260,\n    position: 'relative',\n    marginBottom: theme.spacing(3),\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      top: 5,\n      right: -10,\n      bottom: -10,\n      left: 5,\n      zIndex: -1,\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n  content: {\n    maxWidth: 500,\n  },\n  title: {\n    textTransform: 'uppercase',\n    letterSpacing: '0.03em',\n    lineHeight: '1.1em',\n    marginBottom: theme.spacing(1),\n    // fontWeight: 400,\n    // fontWeight: 'bold',\n  },\n  lead: {\n    marginBottom: theme.spacing(1),\n    lineHeight: '1.2em',\n  },\n  paragraph: {\n    marginBottom: theme.spacing(2)\n  },\n}));\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAQA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AARA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAPA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA5CA;AAAA;;;;A","sourceRoot":""}